name: Windows Go Build

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        go-version: [ '1.21.5' ]
        platform: [ 'amd64', 'arm64']

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Extract version
      run: echo "VERSION=$(git describe --tags)" >> $GITHUB_ENV

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Build
      run: |
        env GOOS=windows GOARCH=${{ matrix.platform }} go build -ldflags "-H=windowsgui -X main.Version=${{ env.VERSION }}" -o pidash-${{ matrix.platform }}-${{ env.VERSION }}.exe

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pidash-${{ matrix.platform }}-${{ env.VERSION }}.exe
        asset_name: pidash-${{ matrix.platform }}-${{ env.VERSION }}.exe
        asset_content_type: application/octet-stream